if [ -f /etc/profile ]; then source /etc/profile; fi

DEFAULT_USER=$(whoami)

plugins=(git osx gradle wd jsontools)

theme="hyperzsh"

# only set ZSH_THEME if it exists
theme_path=themes/${theme}.zsh-theme
if [[ -f $ZSH/$theme_path ]] || [[ -f $ZSH/custom/$theme_path ]]; then
	echo "Setting ZSH_THEME=$theme"
	ZSH_THEME=$theme
fi

if [[ ! $(which docker-machine) ]]; then
	eval $(docker-machine env default)
fi

dm-start() {
  docker-machine start default
  eval $(docker-machine env default)
}

export PATH=./node_modules/.bin:/Users/Dan/.npm-packages/bin:$PATH
export EDITOR=vim

if [[ ! $(which pyenv) ]]; then
	eval "$(pyenv init -)"
	eval "$(pyenv virtualenv-init -)"
fi

export NVM_DIR=~/.nvm
source $(brew --prefix nvm)/nvm.sh

autoload -U add-zsh-hook
load-nvmrc() {
  local node_version="$(nvm version)"
  local nvmrc_path="$(nvm_find_nvmrc)"

  if [ -n "$nvmrc_path" ]; then
    local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

    if [ "$nvmrc_node_version" != "N/A" ] && [ "$nvmrc_node_version" != "$node_version" ]; then
      nvm use
    fi
  elif [ "$node_version" != "$(nvm version default)" ]; then

    nvm use default
  fi
}
add-zsh-hook chpwd load-nvmrc

#load-nvmrc
alias rebuild-heroku="git reset HEAD~; git push -f heroku master"
